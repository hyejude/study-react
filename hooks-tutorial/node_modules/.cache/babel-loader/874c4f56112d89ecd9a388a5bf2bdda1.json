{"ast":null,"code":"var _jsxFileName = \"/Users/hyejoo/study-react/hooks-tutorial/src/Average.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useCallback, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getAverage = num => {\n  console.log(\"평균값 계산 중...\");\n  if (num.length === 0) return 0;\n  const sum = num.reduce((a, b) => a + b);\n  return sum / num.length;\n};\n\nconst Average = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [num, setNum] = useState(\"\");\n  const inputEl = useRef(null);\n  const onChange = useCallback(e => {\n    setNum(e.target.value);\n  }, []); // 컴포넌트가 처음 렌더링 될 때만 생성\n\n  const onInsert = useCallback(e => {\n    // nextList에 기존 숫자들(num) 정수화해서 append -> setList로 상태 변경 -> setNum으로 초기화\n    const nextList = list.concat(parseInt(num));\n    setList(nextList);\n    setNum('');\n    inputEl.current.focus();\n  }, [num, list]); // num 또는 list 바뀔 때만 생성\n\n  const avg = useMemo(() => getAverage(list), [list]);\n  console.log(inputEl.current.focus());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: num,\n      onChange: onChange,\n      ref: inputEl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onInsert,\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uD3C9\\uADE0\\uAC12:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), \" \", avg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Average, \"NXItbiA66GDEruxJFDP9JJufqhY=\");\n\n_c = Average;\nexport default Average;\n\nvar _c;\n\n$RefreshReg$(_c, \"Average\");","map":{"version":3,"names":["React","useState","useMemo","useCallback","useRef","getAverage","num","console","log","length","sum","reduce","a","b","Average","list","setList","setNum","inputEl","onChange","e","target","value","onInsert","nextList","concat","parseInt","current","focus","avg","map","index"],"sources":["/Users/hyejoo/study-react/hooks-tutorial/src/Average.js"],"sourcesContent":["import React, { useState, useMemo, useCallback, useRef } from 'react';\n\nconst getAverage = num => {\n    console.log(\"평균값 계산 중...\");\n    if (num.length === 0) return 0;\n    const sum = num.reduce((a, b) => a + b);\n    return sum / num.length;\n};\n\nconst Average = () => {\n    const [list, setList] = useState([]);\n    const [num, setNum] = useState(\"\");\n    const inputEl = useRef(null);\n\n    const onChange = useCallback(e => {\n        setNum(e.target.value);\n    }, []); // 컴포넌트가 처음 렌더링 될 때만 생성\n\n    const onInsert = useCallback(e => {\n        // nextList에 기존 숫자들(num) 정수화해서 append -> setList로 상태 변경 -> setNum으로 초기화\n        const nextList = list.concat(parseInt(num));\n        setList(nextList);\n        setNum('');\n        inputEl.current.focus();\n    }, [num, list]); // num 또는 list 바뀔 때만 생성\n\n    const avg = useMemo(() => getAverage(list), [list]);\n    console.log(inputEl.current.focus());\n\n    return (\n        <div>\n            <input value={num} onChange={onChange} ref={inputEl} />\n            <button onClick={onInsert}>등록</button>\n            <ul>\n                {list.map((value, index) => <li key={index}>{value}</li>)}\n            </ul>\n            <div>\n                <b>평균값:</b> {avg}\n            </div>\n        </div>\n    );\n};\n\nexport default Average;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgDC,MAAhD,QAA8D,OAA9D;;;AAEA,MAAMC,UAAU,GAAGC,GAAG,IAAI;EACtBC,OAAO,CAACC,GAAR,CAAY,aAAZ;EACA,IAAIF,GAAG,CAACG,MAAJ,KAAe,CAAnB,EAAsB,OAAO,CAAP;EACtB,MAAMC,GAAG,GAAGJ,GAAG,CAACK,MAAJ,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAzB,CAAZ;EACA,OAAOH,GAAG,GAAGJ,GAAG,CAACG,MAAjB;AACH,CALD;;AAOA,MAAMK,OAAO,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACK,GAAD,EAAMW,MAAN,IAAgBhB,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAMiB,OAAO,GAAGd,MAAM,CAAC,IAAD,CAAtB;EAEA,MAAMe,QAAQ,GAAGhB,WAAW,CAACiB,CAAC,IAAI;IAC9BH,MAAM,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;EACH,CAF2B,EAEzB,EAFyB,CAA5B,CALkB,CAOV;;EAER,MAAMC,QAAQ,GAAGpB,WAAW,CAACiB,CAAC,IAAI;IAC9B;IACA,MAAMI,QAAQ,GAAGT,IAAI,CAACU,MAAL,CAAYC,QAAQ,CAACpB,GAAD,CAApB,CAAjB;IACAU,OAAO,CAACQ,QAAD,CAAP;IACAP,MAAM,CAAC,EAAD,CAAN;IACAC,OAAO,CAACS,OAAR,CAAgBC,KAAhB;EACH,CAN2B,EAMzB,CAACtB,GAAD,EAAMS,IAAN,CANyB,CAA5B,CATkB,CAeD;;EAEjB,MAAMc,GAAG,GAAG3B,OAAO,CAAC,MAAMG,UAAU,CAACU,IAAD,CAAjB,EAAyB,CAACA,IAAD,CAAzB,CAAnB;EACAR,OAAO,CAACC,GAAR,CAAYU,OAAO,CAACS,OAAR,CAAgBC,KAAhB,EAAZ;EAEA,oBACI;IAAA,wBACI;MAAO,KAAK,EAAEtB,GAAd;MAAmB,QAAQ,EAAEa,QAA7B;MAAuC,GAAG,EAAED;IAA5C;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAEK,QAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,UACKR,IAAI,CAACe,GAAL,CAAS,CAACR,KAAD,EAAQS,KAAR,kBAAkB;QAAA,UAAiBT;MAAjB,GAASS,KAAT;QAAA;QAAA;QAAA;MAAA,QAA3B;IADL;MAAA;MAAA;MAAA;IAAA,QAHJ,eAMI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,OACiBF,GADjB;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAhCD;;GAAMf,O;;KAAAA,O;AAkCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}